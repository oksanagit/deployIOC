########################################
# 
# ADSimDetector is a role now
#
########################################

#     Check it envPath exists and is symbolyc link
      - stat:
          path: "{{root_ioc_dir}}/{{ioc_name}}/envPaths"
        register: st
  
      - fail:
          msg: "envPaths exists and is a link"
        when: generateEnvPaths == "YES" and st.stat.islnk is defined and st.stat.islnk==True

      - name: create envPaths soft link
        file:
            src: "{{ deployment_dir }}/support/areaDetector/ADSimDetector/iocs/simDetectorIOC/iocBoot/iocSimDetector/envPaths"
            dest: "{{root_ioc_dir}}/{{ioc_name}}/envPaths"
            owner: softioc
            group: controls
            mode: u=r,g=r,o=r
            state: link
        when: generateEnvPaths == "NO"

      - name: create envPaths for binary deployment in a different folder than iot was compiled in
        blockinfile:
            dest: "{{root_ioc_dir}}/{{ioc_name}}/envPaths"
            create: yes
            owner: softioc
            group: controls
            mode: u=r,g=r,o=r
            block: |
              epicsEnvSet("IOC","iocSimDetector")
              epicsEnvSet("TOP","{{ deployment_dir }}/support/areaDetector/ADSimDetector/iocs/simDetectorIOC")
              epicsEnvSet("ADPROSILICA","{{ deployment_dir }}/support/areaDetector/ADSimDetector/iocs/simDetectorIOC/../..")
              epicsEnvSet("SUPPORT","{{ deployment_dir }}/support")
              epicsEnvSet("ASYN","{{ deployment_dir }}/support/asyn")
              epicsEnvSet("AREA_DETECTOR","{{ deployment_dir }}/support/areaDetector")
              epicsEnvSet("ADSUPPORT","{{ deployment_dir }}/support/areaDetector/ADSupport")
              epicsEnvSet("ADCORE","{{ deployment_dir }}/support/areaDetector/ADCore")
              epicsEnvSet("AUTOSAVE","{{ deployment_dir }}/support/autosave")
              epicsEnvSet("BUSY","{{ deployment_dir }}/support/busy")
              epicsEnvSet("CALC","{{ deployment_dir }}/support/calc")
              epicsEnvSet("SNCSEQ","{{ deployment_dir }}/support/seq")
              epicsEnvSet("SSCAN","{{ deployment_dir }}/support/sscan")
              epicsEnvSet("DEVIOCSTATS","{{ deployment_dir }}/support/iocStats")
              epicsEnvSet("EPICS_BASE","{{ deployment_dir }}/epics-base")
        when: generateEnvPaths == "YES"      
 

      - name: create auto_settings.req soft link
        file:
            src: "{{ deployment_dir }}/support/areaDetector/ADSimDetector/iocs/simDetectorIOC/iocBoot/iocSimDetector/auto_settings.req"
            dest: "{{root_ioc_dir}}/{{ioc_name}}/auto_settings.req"
            owner: softioc
            group: controls
            mode: u=r,g=r,o=r
            state: link
#        when: IOC_TYPE == 'ADSimDetector' 

      - name: copy ADSimDetector st_base.cmd to {{ioc_name}}
        copy:
            src: "{{ deployment_dir }}/support/areaDetector/ADSimDetector/iocs/simDetectorIOC/iocBoot/iocSimDetector/st_base.cmd"
            remote_src: yes
            dest: "{{root_ioc_dir}}/{{ioc_name}}/st.cmd"
            owner: softioc
            group: controls
            mode: u=rwx,g=rwx,o=rx   
#        when: IOC_TYPE == 'ADSimDetector' 

      - name: enter correct path to ADSimDetector executable
        replace:
          path: "{{root_ioc_dir}}/{{ioc_name}}/st.cmd"
          regexp: '#!../..'
          replace: "#!{{ deployment_dir }}/support/areaDetector/ADSimDetector/iocs/simDetectorIOC"
#        when: IOC_TYPE == 'ADSimDetector' 

      - name: add < envPaths 
        lineinfile:
          path: "{{root_ioc_dir}}/{{ioc_name}}/st.cmd"
          insertbefore: BOF
          line: < envPaths

      - name: add path to executable
        lineinfile:
          path: "{{root_ioc_dir}}/{{ioc_name}}/st.cmd"
          insertbefore: BOF
          line: "#!{{ deployment_dir }}/support/areaDetector/ADSimDetector/iocs/simDetectorIOC/bin/linux-x86_64/simDetectorApp"

